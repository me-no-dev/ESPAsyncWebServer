#include "SPIFFSEditor.h"
#include <FS.h>


//File: edit.htm.gz, Size: 4929
#define edit_htm_gz_len 4929
const uint8_t edit_htm_gz[] PROGMEM = {
 0x1F, 0x8B, 0x08, 0x08, 0x36, 0xFB, 0x96, 0x59, 0x00, 0x03, 0x65, 0x64, 0x69, 0x74, 0x6F, 0x72,
 0x2E, 0x68, 0x74, 0x6D, 0x00, 0xC5, 0x1B, 0xE9, 0x7A, 0xD3, 0x48, 0xF2, 0x7F, 0x9E, 0xA2, 0x47,
 0xEC, 0x10, 0x79, 0x7C, 0xE6, 0x20, 0x03, 0x4E, 0x02, 0x63, 0x3B, 0x81, 0x04, 0x72, 0x11, 0xDB,
 0x30, 0x81, 0x65, 0xE7, 0x93, 0xA5, 0xB6, 0xAD, 0x44, 0x96, 0x84, 0x24, 0xC7, 0x0E, 0x6C, 0xDE,
 0x7D, 0xAB, 0xFA, 0x52, 0x4B, 0x96, 0x4D, 0x80, 0xD9, 0x5D, 0x42, 0x62, 0xA9, 0xBB, 0xAA, 0xBA,
 0xBA, 0xEE, 0x3E, 0xBC, 0xF7, 0xCB, 0xC1, 0x79, 0xA7, 0x77, 0x75, 0x71, 0x48, 0xC6, 0xC9, 0xC4,
 0x7B, 0xBE, 0xB6, 0x87, 0x1F, 0xC4, 0xB3, 0xFC, 0xD1, 0xBE, 0x41, 0x7D, 0x03, 0x1B, 0xA8, 0xE5,
 0xC0, 0x47, 0xE2, 0x26, 0x1E, 0x7D, 0x7E, 0xD8, 0xBD, 0x20, 0x87, 0x8E, 0x9B, 0x04, 0xD1, 0x5E,
 0x9D, 0xB7, 0xAC, 0xED, 0xC5, 0xC9, 0x9D, 0x47, 0x49, 0x72, 0x17, 0xD2, 0x7D, 0x23, 0xA1, 0xF3,
 0xA4, 0x6E, 0xC7, 0xB1, 0x41, 0x26, 0xD4, 0x71, 0xAD, 0x7D, 0x23, 0xB6, 0x23, 0xCA, 0xE8, 0xD4,
 0xEC, 0x09, 0xF9, 0xBA, 0x46, 0xC8, 0x97, 0xAA, 0xEB, 0x3B, 0x74, 0xDE, 0x24, 0x5B, 0x8D, 0xC6,
 0x2E, 0xBC, 0x87, 0x41, 0xEC, 0x26, 0x6E, 0xE0, 0x37, 0x89, 0x35, 0x88, 0x03, 0x6F, 0x9A, 0x50,
 0x6C, 0xF5, 0xE8, 0x30, 0x69, 0x92, 0x27, 0xE1, 0x1C, 0x5F, 0x06, 0x41, 0xE4, 0xD0, 0xA8, 0x49,
 0x36, 0xC2, 0x39, 0x01, 0x10, 0xD7, 0x21, 0x8F, 0xB6, 0xB7, 0xB7, 0x59, 0x8F, 0x65, 0xDF, 0x8C,
 0xA2, 0x60, 0xEA, 0x3B, 0x55, 0x3B, 0xF0, 0x02, 0x80, 0x79, 0xF4, 0xF2, 0x09, 0xFE, 0x60, 0xA7,
 0xE3, 0xC6, 0xA1, 0x67, 0xDD, 0x35, 0x89, 0x1F, 0xF8, 0x94, 0xD3, 0x99, 0x57, 0xE3, 0xB1, 0xE5,
 0x04, 0xB3, 0x26, 0x69, 0xC0, 0xCF, 0x46, 0x03, 0x08, 0x46, 0xA3, 0x81, 0x65, 0x92, 0x46, 0x45,
 0xFC, 0xAF, 0x6D, 0x93, 0x12, 0xC2, 0x0E, 0x03, 0x3F, 0xA9, 0xC6, 0xEE, 0x17, 0x0A, 0xC3, 0x6E,
 0x72, 0x36, 0x58, 0xD3, 0xD0, 0x9A, 0xB8, 0x1E, 0xD0, 0x8C, 0x2D, 0x3F, 0xAE, 0xC6, 0x34, 0x72,
 0x87, 0xAA, 0x6B, 0x46, 0xDD, 0xD1, 0x38, 0x69, 0x0E, 0x02, 0xCF, 0xD9, 0x5D, 0xBB, 0x67, 0x13,
 0x9E, 0x7A, 0x6C, 0xCE, 0x9E, 0x1B, 0x03, 0x31, 0x14, 0x53, 0xCA, 0x4C, 0x12, 0x84, 0xC0, 0x45,
 0x3A, 0x57, 0xF6, 0x38, 0xB1, 0xA2, 0x91, 0xEB, 0x8B, 0x97, 0xD0, 0x72, 0x1C, 0xD7, 0x1F, 0xB1,
 0x37, 0x4E, 0xCE, 0x73, 0x19, 0xB9, 0x54, 0x64, 0x11, 0xF5, 0xAC, 0xC4, 0xBD, 0x65, 0x04, 0x27,
 0xAE, 0x5F, 0x9D, 0xB9, 0x4E, 0x32, 0x6E, 0x92, 0x9D, 0x06, 0xE7, 0xD8, 0x9E, 0x46, 0x31, 0x0A,
 0x25, 0x0C, 0x5C, 0x3F, 0xA1, 0x91, 0x24, 0x13, 0x87, 0x96, 0xCF, 0x08, 0x49, 0x99, 0x09, 0x69,
 0x2A, 0x81, 0xB9, 0xBE, 0xE7, 0xFA, 0xB4, 0x3A, 0xF0, 0x02, 0xFB, 0x26, 0xC3, 0xC9, 0x0E, 0xD2,
 0x95, 0xBC, 0x34, 0xC7, 0xC1, 0x2D, 0x8D, 0xC8, 0x57, 0x4D, 0x0B, 0x82, 0x16, 0xC9, 0x81, 0xF0,
 0x01, 0xD5, 0x70, 0x87, 0x87, 0x87, 0x0C, 0x24, 0xB9, 0x9D, 0x82, 0x84, 0x40, 0xE6, 0xF8, 0x20,
 0xE7, 0xA6, 0x4D, 0x3A, 0x27, 0x8F, 0x45, 0x29, 0x0A, 0x1A, 0xAE, 0x1F, 0x4E, 0x93, 0x9C, 0x64,
 0x74, 0x63, 0x0A, 0x42, 0xCB, 0x76, 0x93, 0x3B, 0x29, 0x48, 0x44, 0xF9, 0x2A, 0x94, 0x86, 0x94,
 0xA2, 0x89, 0xE5, 0x31, 0x25, 0x93, 0x77, 0x34, 0x72, 0x2C, 0xDF, 0xAA, 0x90, 0x56, 0xE4, 0x5A,
 0xC0, 0x58, 0x37, 0xA3, 0xE4, 0xEA, 0x24, 0xF8, 0x52, 0x9D, 0xC2, 0x2B, 0x34, 0x79, 0xD4, 0x4E,
 0x52, 0x5D, 0x82, 0xEA, 0x07, 0x37, 0x6E, 0x52, 0xDC, 0x59, 0xD8, 0x98, 0x93, 0x3C, 0x13, 0xF7,
 0x98, 0xDB, 0x0F, 0xD9, 0x90, 0x52, 0x46, 0x46, 0x95, 0xAE, 0xB8, 0x28, 0xAA, 0x83, 0x20, 0x49,
 0x82, 0x49, 0x53, 0x78, 0x46, 0x2A, 0x2D, 0x6E, 0xD0, 0x4F, 0x97, 0xE8, 0x7D, 0x85, 0x6E, 0xB3,
 0xA3, 0x12, 0x02, 0xFA, 0x4A, 0x5C, 0xDB, 0xF2, 0xAA, 0x96, 0xE7, 0x8E, 0x40, 0x90, 0x13, 0xD7,
 0x71, 0x3C, 0x9A, 0x75, 0xB6, 0x26, 0x99, 0x46, 0x9E, 0xB9, 0xEE, 0x58, 0x89, 0xD5, 0x74, 0x27,
 0xD6, 0x88, 0xD6, 0x43, 0x7F, 0xB4, 0x3B, 0xB0, 0x62, 0xBA, 0xB3, 0x5D, 0x71, 0xDF, 0xB5, 0xCF,
 0x2F, 0x67, 0x8D, 0x37, 0xAF, 0x46, 0x41, 0x0B, 0xFE, 0x9D, 0x75, 0xFB, 0xE3, 0xC3, 0xFE, 0x08,
 0x9E, 0xDA, 0xF8, 0xDA, 0x7A, 0xDB, 0x69, 0xBD, 0x85, 0x8F, 0xCE, 0x46, 0xF9, 0x7A, 0xF8, 0x19,
 0x1B, 0xDA, 0xAF, 0x9C, 0x76, 0xAF, 0x7F, 0xD8, 0x6A, 0xBD, 0xA9, 0x1F, 0x9F, 0xCD, 0xDE, 0xBF,
 0xD9, 0xC1, 0xEE, 0xB6, 0xD7, 0xB8, 0x7C, 0x37, 0x6E, 0xF4, 0x37, 0x9F, 0x4D, 0x9C, 0x23, 0x67,
 0x6C, 0x4F, 0xFA, 0xAD, 0xB7, 0xEF, 0x2F, 0x6F, 0xAF, 0x26, 0xFD, 0x51, 0xF7, 0xFD, 0xC6, 0xF8,
 0xC3, 0xE6, 0xBB, 0xEE, 0x87, 0xF7, 0x2F, 0x6F, 0xE8, 0x9F, 0x47, 0xAF, 0x3F, 0xF4, 0x66, 0x80,
 0x70, 0x10, 0x74, 0xFB, 0x97, 0xED, 0x77, 0xED, 0xD1, 0x87, 0xB6, 0x7D, 0x38, 0x1F, 0x78, 0x67,
 0xED, 0x57, 0xAD, 0x41, 0x6B, 0xD3, 0xA6, 0x74, 0xD4, 0xBB, 0x6C, 0x4F, 0x8F, 0xDF, 0x9C, 0x8F,
 0x5C, 0x77, 0xDC, 0xFD, 0x70, 0xD6, 0xB3, 0x3B, 0x4F, 0x4E, 0xFA, 0x47, 0x2D, 0x77, 0x7C, 0xF6,
 0xFA, 0xB2, 0x71, 0xF3, 0xEA, 0x4D, 0xE7, 0xC0, 0xBE, 0x7A, 0x7D, 0xB5, 0x73, 0xB0, 0x55, 0xFF,
 0xFD, 0xF7, 0x53, 0xE7, 0xDC, 0xF5, 0x7B, 0xB7, 0x5F, 0x5A, 0xA3, 0xCE, 0xEC, 0xE9, 0x5D, 0xDC,
 0x1B, 0x1F, 0xDF, 0xFA, 0xF5, 0x77, 0xC1, 0xF5, 0xF1, 0xDD, 0x29, 0xFC, 0x5E, 0x5C, 0x94, 0x07,
 0xDD, 0x8D, 0xB8, 0xFF, 0xF6, 0xF8, 0xDD, 0x66, 0xFC, 0xEC, 0x49, 0xD8, 0x3E, 0x38, 0xB8, 0x9D,
 0x0C, 0x2E, 0xEA, 0x13, 0xE7, 0x66, 0x98, 0x3C, 0xDD, 0x4A, 0xC2, 0xAB, 0xD1, 0xF4, 0xC3, 0xE7,
 0x27, 0xAF, 0xC7, 0xF5, 0x73, 0x6A, 0x5D, 0x8D, 0xCB, 0x77, 0x5F, 0xEE, 0x9E, 0x8E, 0x7B, 0x47,
 0xB7, 0x67, 0x9E, 0x35, 0x3F, 0x3B, 0xB3, 0xBF, 0x4C, 0xCA, 0x9E, 0xF5, 0xEC, 0xBC, 0xE7, 0x59,
 0xD1, 0x46, 0xDF, 0x69, 0xD5, 0xCB, 0x9D, 0xCD, 0xD6, 0x76, 0x12, 0x5D, 0x76, 0xFC, 0x83, 0xAD,
 0xEB, 0xEE, 0xD3, 0x76, 0x7B, 0x23, 0x18, 0x7C, 0xDE, 0x7C, 0x75, 0xB3, 0xF3, 0xAA, 0xBF, 0xF3,
 0x76, 0xF0, 0xB6, 0xD5, 0xDD, 0x6E, 0xF7, 0xAD, 0xAB, 0xEE, 0xDB, 0xD6, 0x70, 0x7B, 0x30, 0x1E,
 0xBF, 0x79, 0xD3, 0x7B, 0xE9, 0xB4, 0xBE, 0x44, 0xAD, 0xF3, 0x59, 0x6B, 0x7E, 0xD8, 0x6F, 0x1D,
 0x95, 0xDF, 0x1C, 0x9E, 0x36, 0x36, 0xBA, 0x57, 0x5B, 0xA3, 0xD3, 0x9D, 0x59, 0x3B, 0x3E, 0x6C,
 0xBD, 0x6D, 0x37, 0x46, 0xAF, 0xCB, 0x13, 0xEB, 0x43, 0xD0, 0xD9, 0x1A, 0x1D, 0xEF, 0xB8, 0x17,
 0x57, 0x56, 0xEB, 0xB8, 0xFD, 0x3A, 0x76, 0x2F, 0x27, 0x47, 0xFD, 0x46, 0xAB, 0x75, 0x72, 0x4E,
 0x5F, 0x76, 0xB6, 0xAC, 0x37, 0x9B, 0xF6, 0x7B, 0x90, 0x7F, 0xFF, 0x4F, 0xFA, 0x7B, 0xB9, 0x35,
 0x3B, 0x6F, 0x78, 0xF6, 0x33, 0xDA, 0x3B, 0xBA, 0xEA, 0x31, 0xED, 0x1C, 0x7A, 0x2F, 0x7B, 0x37,
 0xDD, 0xE9, 0xDB, 0x49, 0xA7, 0xB3, 0x5E, 0x02, 0x6B, 0xAD, 0x46, 0x34, 0xA4, 0x56, 0x92, 0x8B,
 0xB5, 0xA9, 0x9B, 0x61, 0x04, 0x6D, 0xE4, 0xCC, 0x55, 0xC6, 0x05, 0x0C, 0x72, 0x90, 0x0E, 0xAA,
 0x0E, 0xB5, 0x83, 0xC8, 0xE2, 0xF0, 0x80, 0x4D, 0x23, 0x34, 0x40, 0xC4, 0xF8, 0x83, 0xE5, 0x08,
 0xC2, 0x53, 0x04, 0xB1, 0x7C, 0x87, 0x98, 0xD2, 0x93, 0x30, 0x98, 0x39, 0xF4, 0xD6, 0xB5, 0x69,
 0x35, 0x74, 0xE7, 0xD4, 0xAB, 0x32, 0x02, 0xCD, 0x46, 0x09, 0xA9, 0xE2, 0x48, 0xF8, 0x99, 0x3A,
 0x9E, 0xE5, 0x83, 0x19, 0xF2, 0x11, 0x64, 0x8B, 0x73, 0x6D, 0xD9, 0x14, 0xA2, 0x32, 0x38, 0xDE,
 0x04, 0x3F, 0xB9, 0x07, 0x06, 0x51, 0x75, 0x30, 0x1D, 0x0D, 0xDD, 0x39, 0xF8, 0xC1, 0xD0, 0xF5,
 0xDD, 0x84, 0x92, 0x8D, 0x18, 0x67, 0x77, 0xBF, 0x06, 0x7F, 0xFE, 0x90, 0xF4, 0x6E, 0xE8, 0xDD,
 0x30, 0xB2, 0x26, 0x34, 0x7E, 0x30, 0x39, 0xCE, 0xCF, 0x30, 0x0A, 0x20, 0xCB, 0x11, 0xF6, 0x9C,
 0x8F, 0x65, 0x30, 0x06, 0xEF, 0x48, 0x82, 0x15, 0x20, 0x8C, 0x95, 0xFB, 0xB5, 0x47, 0xD3, 0xD0,
 0x0B, 0x2C, 0x87, 0x85, 0xD7, 0xA5, 0x71, 0x2D, 0x4D, 0x21, 0x11, 0xF7, 0xE1, 0x7C, 0x3A, 0x11,
 0xBE, 0xBD, 0x29, 0xC2, 0x42, 0x26, 0xCA, 0x6C, 0x6E, 0x67, 0x42, 0x48, 0x95, 0xA3, 0x6D, 0x88,
 0xCC, 0x51, 0x90, 0x58, 0x45, 0xA8, 0xE2, 0xAF, 0x2C, 0x86, 0x23, 0x9F, 0x09, 0xE8, 0xEE, 0x9B,
 0x3C, 0x4A, 0x06, 0x44, 0xF0, 0x5A, 0xE0, 0x93, 0xA7, 0xAD, 0x0D, 0x99, 0xB6, 0x94, 0x50, 0x9E,
 0x72, 0xCB, 0x7A, 0x44, 0x59, 0xC5, 0x51, 0x21, 0x8F, 0xC2, 0x08, 0x6C, 0x82, 0xCE, 0x1E, 0x3C,
 0xA0, 0x2E, 0x97, 0x82, 0xC1, 0xD5, 0x88, 0xBC, 0xC2, 0xE0, 0x32, 0xD0, 0xAA, 0x0C, 0x39, 0x49,
 0x35, 0x6C, 0xB1, 0x64, 0x18, 0x58, 0xCA, 0xF6, 0x13, 0xC1, 0xF5, 0x03, 0x15, 0xB8, 0xB5, 0xF3,
 0xAB, 0xC6, 0xEA, 0x76, 0xE3, 0x57, 0xE6, 0x4C, 0x12, 0x99, 0x59, 0x85, 0xAA, 0x99, 0x36, 0x1A,
 0x8D, 0x86, 0xB0, 0x14, 0x59, 0x14, 0x3D, 0x4D, 0xD9, 0x1D, 0x3C, 0xC1, 0x9F, 0x5D, 0x52, 0xFF,
 0x8D, 0xBC, 0x8A, 0xE8, 0x1D, 0xF9, 0xAD, 0xAE, 0x41, 0x56, 0xD9, 0x60, 0x1A, 0xF4, 0xD6, 0xF6,
 0xB3, 0xA7, 0xCE, 0x80, 0x41, 0xB7, 0xBD, 0x29, 0xCD, 0x41, 0x4B, 0x69, 0x3D, 0x18, 0x21, 0xB2,
 0x1C, 0x77, 0x1A, 0x43, 0xCD, 0xD6, 0xF8, 0x95, 0x33, 0x28, 0x6A, 0x91, 0xCD, 0x6D, 0x21, 0xE3,
 0x34, 0xD5, 0x68, 0x4D, 0x9A, 0xE3, 0xC6, 0xA1, 0xEB, 0x93, 0xCD, 0x98, 0x59, 0xA9, 0x15, 0x29,
 0xFF, 0xE4, 0x70, 0x32, 0x7D, 0xC9, 0xBC, 0xBF, 0xF6, 0x47, 0xEA, 0xA2, 0x0C, 0x91, 0x0B, 0xAA,
 0xF1, 0x2B, 0x88, 0x3B, 0x89, 0x20, 0x6D, 0x0F, 0x21, 0xAD, 0x43, 0x7D, 0x14, 0x24, 0x56, 0x42,
 0xCD, 0x86, 0x43, 0x47, 0xA5, 0x5D, 0xE6, 0x5C, 0x04, 0x65, 0x58, 0x0C, 0xB5, 0xB5, 0xA3, 0xE0,
 0xEE, 0xD7, 0xF6, 0xEA, 0xAC, 0xD2, 0xC0, 0xF2, 0xD6, 0x8E, 0xDC, 0x30, 0x79, 0xBE, 0xE6, 0x0E,
 0x89, 0x89, 0x45, 0x6E, 0x30, 0x24, 0x7F, 0x9E, 0x9E, 0x1C, 0x25, 0x49, 0x78, 0x49, 0x3F, 0x4F,
 0x69, 0x9C, 0x90, 0xFD, 0xFD, 0x7D, 0x62, 0x60, 0x64, 0x03, 0x8E, 0xA9, 0x63, 0x94, 0x18, 0x33,
 0x79, 0x18, 0x32, 0x9C, 0xFA, 0x36, 0xCE, 0x94, 0x98, 0x25, 0xC1, 0x6D, 0x12, 0xDD, 0x01, 0x23,
 0x11, 0x4D, 0xA6, 0x91, 0x4F, 0x7C, 0xB0, 0xAF, 0x96, 0x8D, 0xC5, 0xDC, 0x9F, 0xE7, 0x83, 0x6B,
 0x88, 0x2D, 0xA6, 0x71, 0x1A, 0xCF, 0x27, 0xDE, 0x66, 0x0D, 0x29, 0xF5, 0x7A, 0x17, 0xB5, 0x9D,
 0x5A, 0xC3, 0x40, 0xEE, 0x88, 0x6D, 0x25, 0xF6, 0x98, 0x98, 0x14, 0xE8, 0xDC, 0xFF, 0x08, 0xA1,
 0xAD, 0x1F, 0x27, 0xE4, 0xDA, 0x51, 0x10, 0x07, 0xC3, 0x44, 0xD2, 0x5A, 0x46, 0x67, 0x1C, 0x05,
 0x33, 0x46, 0xE0, 0x30, 0x8A, 0x82, 0xC8, 0x34, 0x7A, 0x63, 0x37, 0x26, 0x03, 0x68, 0x84, 0x62,
 0x88, 0x38, 0x01, 0x68, 0xCD, 0x0F, 0x12, 0x12, 0x4F, 0xC3, 0x30, 0x88, 0x92, 0x9C, 0xAC, 0x6A,
 0x06, 0xAB, 0xC0, 0xEF, 0x99, 0x9E, 0x95, 0xD4, 0x46, 0xD4, 0xB4, 0x58, 0xF4, 0x17, 0xDC, 0x39,
 0x81, 0x3D, 0xC5, 0x48, 0x5C, 0x1B, 0xD1, 0xE4, 0x90, 0x07, 0xE5, 0xF6, 0xDD, 0xB1, 0x03, 0x40,
 0x88, 0xA7, 0xD0, 0xEC, 0x65, 0x68, 0x90, 0x74, 0x40, 0xE9, 0x02, 0x53, 0x60, 0xAD, 0xDD, 0x82,
 0xE1, 0xBD, 0x9D, 0xD2, 0x29, 0x75, 0x04, 0x2F, 0xC0, 0xED, 0xA2, 0xE6, 0x12, 0x98, 0x4C, 0xED,
 0x33, 0x82, 0x41, 0xE7, 0xC7, 0x4F, 0xBB, 0xB2, 0x29, 0x9A, 0xFA, 0x3E, 0x04, 0x00, 0xC4, 0xB0,
 0xBC, 0x98, 0xAA, 0x76, 0x10, 0xFE, 0x18, 0xA6, 0x07, 0xED, 0xFE, 0xD4, 0xF3, 0x70, 0xA0, 0xDC,
 0x18, 0xB5, 0x10, 0x4C, 0x30, 0x40, 0xE3, 0x02, 0x18, 0x1C, 0xE1, 0xAF, 0x88, 0x77, 0x35, 0xD5,
 0xD8, 0x26, 0xB4, 0x94, 0x84, 0xD9, 0x64, 0xC7, 0x4A, 0xA2, 0xA9, 0x70, 0x12, 0x77, 0x68, 0xFE,
 0x02, 0x60, 0xE0, 0x3A, 0x71, 0x62, 0xF9, 0x36, 0x5A, 0x2A, 0x57, 0x5C, 0x49, 0xCC, 0x9E, 0x83,
 0xE1, 0x24, 0x93, 0xB1, 0x85, 0x36, 0x89, 0xA4, 0x78, 0x23, 0x4F, 0x5F, 0x72, 0xA2, 0xD6, 0xB5,
 0x35, 0xEF, 0x0C, 0xCC, 0x79, 0xC5, 0x29, 0x29, 0x73, 0x50, 0x9C, 0x08, 0x36, 0x70, 0x3C, 0x62,
 0xCE, 0x6B, 0x20, 0x47, 0xE7, 0xAE, 0x8B, 0x1E, 0x04, 0x8E, 0x40, 0xB6, 0x55, 0x2F, 0x41, 0x95,
 0x19, 0x3C, 0x8E, 0x19, 0xA5, 0x1A, 0x73, 0xA7, 0x9A, 0xF0, 0x63, 0x18, 0xDA, 0x40, 0x57, 0x36,
 0x76, 0x15, 0xB0, 0x53, 0x83, 0xA2, 0xD3, 0xC3, 0xE8, 0x0A, 0x34, 0x81, 0xFF, 0x64, 0x1A, 0x57,
 0x08, 0x52, 0x8F, 0xC3, 0xC0, 0x8F, 0x69, 0x0F, 0x2A, 0x89, 0x52, 0x0A, 0x0D, 0x53, 0xC5, 0x29,
 0x70, 0x2D, 0xD4, 0x3C, 0xEA, 0x8F, 0x92, 0x31, 0xF3, 0xC3, 0x46, 0x89, 0xCD, 0xAD, 0x48, 0x17,
 0x59, 0x4C, 0x01, 0x20, 0xC0, 0xA5, 0xC0, 0x75, 0xAA, 0xF1, 0xD8, 0x1D, 0x26, 0x66, 0x49, 0x8D,
 0xCA, 0x4D, 0xFB, 0xFE, 0x3E, 0x95, 0xD7, 0xEA, 0x09, 0xB2, 0x12, 0xDB, 0xD0, 0xC4, 0x8B, 0x82,
 0x47, 0x2B, 0x30, 0x0C, 0xA5, 0x2F, 0x18, 0xB6, 0x16, 0x5A, 0x10, 0xC7, 0x62, 0x5D, 0x6B, 0x2F,
 0x21, 0x2C, 0x1D, 0x40, 0x71, 0xAD, 0x64, 0x89, 0x58, 0x29, 0xA8, 0xAC, 0x26, 0x28, 0x4C, 0x6C,
 0x39, 0x11, 0xA1, 0x7A, 0x49, 0x02, 0x42, 0x1D, 0x31, 0x91, 0x03, 0x08, 0x9C, 0x00, 0xA6, 0x91,
 0x93, 0xE1, 0x48, 0xB0, 0x14, 0xF2, 0x78, 0x66, 0x94, 0x54, 0x23, 0x8E, 0x5F, 0xDE, 0x27, 0x6C,
 0x9C, 0x09, 0x4D, 0xC6, 0x81, 0xC3, 0x41, 0x5E, 0x1D, 0xF6, 0x8C, 0xD2, 0x0B, 0xE3, 0x85, 0xD1,
 0x34, 0x34, 0x45, 0x22, 0x57, 0x79, 0x54, 0xE3, 0xB1, 0x06, 0xC0, 0x5A, 0xA8, 0x6F, 0x07, 0x0E,
 0xED, 0x5F, 0x1E, 0x77, 0x82, 0x09, 0x28, 0x18, 0x7D, 0x10, 0x18, 0x2B, 0x95, 0x8D, 0x7D, 0xA3,
 0x5C, 0xD0, 0x97, 0x72, 0xFB, 0x11, 0xC0, 0x3E, 0xA5, 0x3A, 0x49, 0xCB, 0x26, 0x21, 0xE4, 0xBC,
 0xC7, 0x41, 0x0C, 0xCA, 0x86, 0x17, 0x53, 0x20, 0xEB, 0x80, 0xB5, 0xC0, 0x67, 0x66, 0x8C, 0x76,
 0x47, 0xED, 0xB1, 0xE5, 0x8F, 0xD0, 0x13, 0x85, 0x17, 0xE8, 0x80, 0x15, 0x94, 0x5B, 0x29, 0xA3,
 0xBE, 0x05, 0x89, 0x48, 0x69, 0x66, 0x07, 0x08, 0xA9, 0xAF, 0x81, 0x33, 0x3A, 0x35, 0x58, 0x45,
 0x95, 0x81, 0x24, 0x7A, 0xB0, 0x9A, 0x51, 0x06, 0x2B, 0xA6, 0xBE, 0x23, 0xF9, 0x15, 0xFA, 0xFE,
 0x2E, 0xEA, 0x39, 0xDA, 0x4C, 0xBB, 0x9A, 0x89, 0x74, 0x93, 0x08, 0x5D, 0x40, 0x69, 0x26, 0x37,
 0x76, 0x22, 0x24, 0x76, 0x44, 0xD1, 0xC4, 0x4D, 0xA3, 0x03, 0x0B, 0x66, 0xAC, 0x7D, 0x31, 0x50,
 0x19, 0x15, 0x62, 0x58, 0x61, 0xE8, 0xC1, 0x52, 0x11, 0x83, 0x42, 0x7D, 0x5E, 0x9D, 0xCD, 0x66,
 0x55, 0xCC, 0xA7, 0x55, 0x18, 0x97, 0x6B, 0xD0, 0x31, 0x56, 0xCC, 0x2A, 0x2C, 0xA5, 0xAA, 0xBB,
 0xAF, 0xC0, 0x9F, 0x98, 0x15, 0x28, 0xF9, 0x28, 0xC3, 0xDC, 0x35, 0x8D, 0x77, 0xA5, 0xA5, 0x91,
 0x36, 0x05, 0x95, 0xCA, 0x7F, 0xFC, 0x38, 0x3B, 0xAC, 0x16, 0xA8, 0xF6, 0xB4, 0x38, 0x95, 0x81,
 0xB1, 0xA0, 0x9A, 0x51, 0x16, 0xA2, 0x58, 0x83, 0xC2, 0x4E, 0xE3, 0x4C, 0xCA, 0x98, 0xC9, 0x97,
 0x1B, 0x65, 0x85, 0xC8, 0xE0, 0xA5, 0xC7, 0x68, 0x1E, 0x46, 0xC2, 0x69, 0x3C, 0x36, 0xBF, 0x02,
 0x70, 0x13, 0x11, 0x38, 0x72, 0x53, 0xD0, 0xE0, 0xD8, 0x4D, 0x41, 0x44, 0xD2, 0x68, 0xCA, 0x87,
 0xFB, 0xD4, 0xD2, 0x7E, 0xC9, 0x48, 0x21, 0xC3, 0xBB, 0x16, 0xBB, 0xD4, 0xA0, 0xD9, 0xD8, 0x25,
 0x57, 0x15, 0x2C, 0xBF, 0x09, 0xE8, 0x58, 0x38, 0x47, 0x2E, 0x15, 0xE1, 0xDC, 0xB5, 0xEC, 0xC9,
 0x92, 0xE4, 0x4B, 0xD7, 0xA3, 0x7D, 0xB1, 0x1E, 0x31, 0xC5, 0x02, 0x08, 0x2D, 0x8B, 0xD2, 0x0A,
 0xE1, 0xA5, 0x39, 0x63, 0x08, 0x89, 0x83, 0x1C, 0xD1, 0xD5, 0x76, 0xC5, 0x2B, 0xDF, 0x99, 0xD9,
 0xC7, 0x2C, 0x6C, 0xB0, 0x67, 0x6E, 0x11, 0xEC, 0xB1, 0x26, 0xF2, 0x9D, 0x31, 0x04, 0xF2, 0x46,
 0xDA, 0x3C, 0x99, 0x7A, 0x89, 0x1B, 0x7A, 0x54, 0x57, 0x2E, 0xEF, 0xF1, 0xA1, 0xDC, 0x43, 0x04,
 0xDC, 0x77, 0x60, 0x08, 0x10, 0x7F, 0x05, 0x3B, 0xA5, 0x1A, 0x18, 0x23, 0x98, 0x55, 0x67, 0xEC,
 0x7A, 0x8E, 0xC9, 0xC0, 0x4B, 0x92, 0x89, 0xD0, 0xC2, 0xDC, 0x90, 0xE7, 0x01, 0x5B, 0x6B, 0x50,
 0xD6, 0x62, 0xE9, 0xC6, 0xE6, 0x56, 0xC5, 0x16, 0x43, 0x75, 0x49, 0xEE, 0x70, 0x09, 0x9B, 0xB6,
 0x4A, 0x16, 0xB2, 0xB0, 0x50, 0xF9, 0x59, 0xC0, 0xF5, 0x3B, 0xCB, 0x63, 0x25, 0x81, 0x51, 0x5F,
 0xC9, 0x1D, 0xA2, 0x28, 0xE6, 0x06, 0x53, 0xA8, 0xB3, 0x7D, 0xC1, 0x1E, 0x7F, 0xE1, 0xFC, 0xF1,
 0xE7, 0x9A, 0xEB, 0xFB, 0x34, 0x3A, 0xEA, 0x9D, 0x9E, 0x00, 0xC8, 0x3A, 0x57, 0xC2, 0xFA, 0x2A,
 0xE2, 0x1C, 0x4D, 0x91, 0x9F, 0xDC, 0xA0, 0x74, 0x0B, 0xC8, 0xF3, 0x8E, 0x2C, 0xF9, 0x0E, 0xD3,
 0xF6, 0x4A, 0xF2, 0x1C, 0x0D, 0x6D, 0x44, 0xAB, 0x16, 0xD0, 0x73, 0x2E, 0x82, 0x38, 0xB9, 0x88,
 0x02, 0x9B, 0xC6, 0xB1, 0x8C, 0xB3, 0x32, 0x89, 0x67, 0x52, 0xB8, 0xF2, 0x6A, 0xDE, 0x4B, 0x7E,
 0xD9, 0x27, 0x9B, 0x8D, 0x86, 0x0C, 0x41, 0x96, 0x47, 0xC1, 0xFD, 0x8C, 0xC3, 0xCB, 0xCB, 0xF3,
 0xCB, 0x8F, 0x46, 0x99, 0xC3, 0x94, 0x8D, 0x4F, 0x4D, 0x62, 0x94, 0x0B, 0x2A, 0x01, 0x2D, 0xD5,
 0xA0, 0x35, 0x82, 0x87, 0x0F, 0x01, 0x6A, 0x7C, 0x01, 0x02, 0x66, 0x52, 0xAE, 0xDD, 0xA2, 0x46,
 0x78, 0x35, 0xA9, 0x33, 0xCC, 0xCD, 0x9A, 0x83, 0x09, 0x8E, 0x50, 0x58, 0x43, 0x91, 0x76, 0x85,
 0x67, 0xC8, 0x2C, 0x2C, 0xC3, 0x81, 0xEC, 0x16, 0x02, 0x31, 0xB9, 0x11, 0x40, 0x08, 0x10, 0xFD,
 0xD2, 0xB1, 0x6A, 0x10, 0x2E, 0x4C, 0xE3, 0xA2, 0xDF, 0xC3, 0x18, 0x59, 0x47, 0x07, 0x81, 0x07,
 0x89, 0x5C, 0x59, 0x22, 0x2D, 0xC5, 0x64, 0xAA, 0x9B, 0xC0, 0xB7, 0x21, 0xBC, 0xDE, 0x68, 0x05,
 0x28, 0x54, 0xD8, 0x4A, 0x7E, 0xE9, 0xFC, 0x6A, 0x6C, 0x71, 0x78, 0x3E, 0x34, 0x0D, 0xA8, 0x9C,
 0x59, 0x1E, 0xAA, 0x6E, 0x64, 0x2B, 0x3E, 0x7D, 0xBE, 0x59, 0xB1, 0x10, 0xE1, 0xC0, 0x6C, 0xBD,
 0xD9, 0x8F, 0xBC, 0x05, 0xB1, 0x69, 0xA6, 0xB8, 0x9A, 0x1F, 0xEE, 0xA2, 0xC8, 0x78, 0x9C, 0xAD,
 0xC7, 0x64, 0xAC, 0xD2, 0x19, 0xBA, 0xFF, 0x61, 0x99, 0x33, 0xDF, 0xAF, 0x10, 0x6D, 0xB4, 0x8F,
 0x8D, 0x4F, 0x15, 0xB2, 0x30, 0xAD, 0x9C, 0x32, 0xCE, 0xBB, 0x3F, 0xA0, 0x8D, 0x34, 0xF2, 0xC0,
 0xD4, 0x65, 0x51, 0xF0, 0x5D, 0x73, 0x5F, 0xA8, 0xBB, 0x11, 0x46, 0xC4, 0x90, 0xEC, 0x14, 0x58,
 0x64, 0x49, 0xE1, 0xC0, 0xC6, 0x01, 0xA4, 0x6E, 0xBE, 0x68, 0xFE, 0xB3, 0x66, 0x7E, 0xFC, 0x57,
 0xED, 0x53, 0xB9, 0x54, 0x7A, 0xF1, 0x8F, 0x7A, 0x8D, 0xCE, 0xA9, 0x6D, 0x4A, 0x22, 0xA5, 0x8F,
 0x1B, 0x9F, 0x52, 0x14, 0x41, 0xB6, 0x6E, 0xD6, 0x7E, 0x2B, 0xFD, 0xB3, 0xC6, 0x70, 0x96, 0x23,
 0x60, 0xAE, 0xE4, 0x6B, 0x59, 0x86, 0xF6, 0x0B, 0x70, 0xAB, 0x16, 0xB0, 0x69, 0xC9, 0x98, 0x32,
 0x9B, 0x72, 0x77, 0x9F, 0xC3, 0x47, 0x4E, 0x8B, 0xD1, 0x01, 0x86, 0x4D, 0x03, 0x0B, 0x23, 0x3C,
 0x55, 0x02, 0xE3, 0xE4, 0xD3, 0xC2, 0x37, 0x55, 0x0F, 0xCA, 0x22, 0x56, 0x81, 0x5E, 0x87, 0x74,
 0x94, 0x82, 0x5E, 0x87, 0x23, 0x05, 0xAA, 0xF1, 0xA3, 0x1E, 0xCB, 0x04, 0xAC, 0x1E, 0xFE, 0x02,
 0x78, 0x8E, 0xBF, 0xD4, 0x24, 0x38, 0xDD, 0xBA, 0x41, 0xFE, 0xFD, 0x6F, 0xCD, 0x50, 0x6A, 0x9E,
 0x15, 0x27, 0xC7, 0xD2, 0x75, 0xEA, 0xC2, 0x75, 0x52, 0x7B, 0xD5, 0xF1, 0x11, 0xBB, 0x2C, 0xC7,
 0x2C, 0x2C, 0xC7, 0x32, 0xD0, 0xDA, 0x20, 0xF1, 0x74, 0x10, 0xB3, 0x2A, 0xCB, 0x6C, 0x54, 0x56,
 0x0D, 0x5E, 0xDE, 0x28, 0xE5, 0x07, 0x58, 0x5C, 0x03, 0x73, 0x3F, 0xEE, 0x41, 0xA8, 0x4B, 0xD3,
 0x70, 0x2E, 0x01, 0xCB, 0xAD, 0xAA, 0x7D, 0xB6, 0x38, 0x11, 0x6F, 0x86, 0xCA, 0x07, 0x18, 0x26,
 0x2F, 0x83, 0x40, 0xE6, 0x64, 0xC7, 0xBD, 0xE5, 0x7D, 0xB2, 0xBD, 0x66, 0x03, 0x63, 0xF1, 0x99,
 0xC8, 0x72, 0xC9, 0xED, 0x74, 0x65, 0x26, 0x93, 0x58, 0xB9, 0x7C, 0x80, 0xB1, 0xE4, 0x20, 0x98,
 0xF9, 0xF8, 0xC9, 0xB3, 0xDD, 0x57, 0xB9, 0x5C, 0x5A, 0x77, 0x44, 0x7B, 0x95, 0x6D, 0xDE, 0xAC,
 0xC3, 0xB2, 0x29, 0xB2, 0x99, 0x7C, 0x71, 0x1E, 0x2F, 0x64, 0x2F, 0x2C, 0x02, 0x10, 0x8F, 0xC7,
 0xC4, 0x3C, 0xE9, 0x0B, 0x3E, 0xA9, 0x1C, 0x65, 0x83, 0x0B, 0xE2, 0x1B, 0x2B, 0x4D, 0x21, 0x90,
 0xD5, 0x8B, 0x35, 0x09, 0x94, 0x49, 0x8E, 0x7B, 0xEE, 0x64, 0x44, 0x80, 0xD9, 0x7D, 0xC1, 0x2A,
 0xFE, 0xD9, 0x5F, 0x67, 0x6C, 0x96, 0xD7, 0x1F, 0xFF, 0x65, 0x0F, 0xE0, 0x05, 0x42, 0x0A, 0xAD,
 0xF9, 0xC1, 0xCC, 0x2C, 0x95, 0xD7, 0x0D, 0xC2, 0xC6, 0xD8, 0x37, 0x26, 0xD6, 0x5C, 0x9C, 0xCB,
 0xE1, 0xCE, 0xD3, 0x2E, 0xC1, 0x77, 0xB1, 0x13, 0x26, 0x1B, 0xD8, 0x21, 0x97, 0x35, 0x4D, 0x82,
 0x5D, 0xB5, 0xD1, 0xC5, 0xCF, 0x67, 0x0C, 0x52, 0x7F, 0xBE, 0xBE, 0x28, 0x05, 0x30, 0x14, 0x0F,
 0x8B, 0xB2, 0x53, 0xEA, 0x4F, 0x41, 0x33, 0xDC, 0xB0, 0xB4, 0x44, 0x86, 0x27, 0x65, 0x42, 0xC3,
 0x53, 0xCF, 0x50, 0xC9, 0x32, 0xA3, 0x3B, 0x84, 0x29, 0xA5, 0xD1, 0xC3, 0xE2, 0x94, 0x39, 0x92,
 0xE7, 0x4A, 0x24, 0x84, 0xCA, 0xA0, 0x71, 0xB8, 0xB4, 0x2E, 0x75, 0xE3, 0x63, 0x3C, 0x00, 0x42,
 0x6E, 0xB8, 0x42, 0x94, 0xFF, 0x70, 0xC8, 0x8C, 0x10, 0x8D, 0x3D, 0x3C, 0x1F, 0x78, 0x2E, 0x14,
 0xB8, 0x57, 0x67, 0x6F, 0xCA, 0xBD, 0x05, 0xC2, 0x8A, 0x34, 0xC3, 0x38, 0xCA, 0x5B, 0x40, 0x66,
 0x69, 0xAF, 0xB6, 0x77, 0x06, 0x81, 0x73, 0xA7, 0x6D, 0x0D, 0xC5, 0xED, 0xBB, 0x8E, 0xB4, 0x6C,
 0x73, 0xDD, 0x9E, 0x80, 0xE1, 0x89, 0x40, 0xFD, 0x1C, 0xC3, 0x74, 0x16, 0x2D, 0xA2, 0x93, 0xE0,
 0x96, 0xF2, 0xF9, 0x52, 0x6F, 0x61, 0xAD, 0xA9, 0x42, 0x96, 0x1B, 0x63, 0x2D, 0xF2, 0x5D, 0x53,
 0xC7, 0xB3, 0xF3, 0x1F, 0x9B, 0x77, 0x41, 0x9E, 0xFE, 0xDF, 0x4F, 0x5D, 0x99, 0x8B, 0x74, 0xD4,
 0x6F, 0x1B, 0x8C, 0x84, 0x14, 0xFD, 0xF2, 0xB5, 0x48, 0x38, 0x32, 0x66, 0x64, 0x05, 0xA4, 0x30,
 0x56, 0x0A, 0x68, 0x31, 0xE6, 0x68, 0x8B, 0xDE, 0xFF, 0x9E, 0x68, 0xEE, 0x53, 0x0F, 0x72, 0x28,
 0xF3, 0xC9, 0x07, 0x48, 0x84, 0x03, 0x4A, 0x81, 0xF0, 0xB7, 0x42, 0x79, 0x40, 0xD0, 0x4D, 0x68,
 0x4E, 0x1A, 0x02, 0x7C, 0xA5, 0x30, 0xB0, 0xA8, 0xE1, 0xC8, 0xFF, 0x6B, 0x51, 0x64, 0xE3, 0x54,
 0x3C, 0x0E, 0x66, 0x6C, 0xD3, 0x60, 0x9E, 0xF0, 0x50, 0x75, 0xCB, 0x52, 0x16, 0xF2, 0x04, 0x25,
 0x5C, 0xCC, 0x96, 0x12, 0x69, 0xD4, 0x82, 0x64, 0x24, 0x80, 0xF3, 0xD9, 0x89, 0xF7, 0xC7, 0x76,
 0x14, 0x78, 0x5E, 0x2F, 0xC0, 0x6D, 0x9D, 0x2C, 0x3F, 0x69, 0xCF, 0x8B, 0xA5, 0x3D, 0xCD, 0xB4,
 0x47, 0x3E, 0x88, 0xA9, 0xA7, 0x40, 0xF9, 0xB1, 0x4E, 0xE8, 0x30, 0x59, 0x32, 0x18, 0xEB, 0x2A,
 0x1E, 0x8D, 0x75, 0x7D, 0x73, 0x38, 0x84, 0x4A, 0xC7, 0xF3, 0xF8, 0x48, 0x4C, 0x40, 0x90, 0x83,
 0x5D, 0xF8, 0xF8, 0x13, 0xAA, 0x9A, 0x22, 0xD0, 0x84, 0x09, 0x40, 0x87, 0xBC, 0x52, 0x90, 0x6A,
 0x0E, 0xA9, 0x2C, 0x33, 0x19, 0x1D, 0x15, 0xBB, 0x00, 0x90, 0xCF, 0x85, 0xEB, 0x2C, 0xF7, 0x2C,
 0x83, 0x13, 0x9C, 0xB2, 0x8F, 0x32, 0x59, 0x0F, 0xE7, 0xCB, 0x00, 0x39, 0x9F, 0xF8, 0x57, 0x07,
 0xCB, 0xA4, 0xAE, 0x14, 0x47, 0xA4, 0x30, 0xE9, 0xF1, 0xBA, 0x50, 0x33, 0xAE, 0xA3, 0x10, 0x34,
 0xBB, 0x60, 0xC9, 0x15, 0xD5, 0x94, 0x72, 0x10, 0x0C, 0x87, 0x31, 0x4D, 0xDE, 0x63, 0x47, 0x0A,
 0xC7, 0x93, 0x6E, 0x11, 0xE0, 0x11, 0xEB, 0x59, 0x98, 0x47, 0xE0, 0x4F, 0x82, 0x69, 0x4C, 0x83,
 0x69, 0x52, 0xEC, 0x66, 0x58, 0xB5, 0x2A, 0x65, 0xED, 0x71, 0x91, 0x40, 0x89, 0x99, 0xB6, 0x3D,
 0x27, 0xA6, 0x90, 0x13, 0xE3, 0xB1, 0xA4, 0xF7, 0x5E, 0x01, 0x06, 0x0A, 0x27, 0xD3, 0x04, 0x08,
 0x5C, 0x60, 0x9C, 0xD7, 0x92, 0x16, 0xFF, 0xFF, 0x1B, 0xBE, 0xBB, 0x20, 0x4E, 0xB5, 0xC9, 0xBD,
 0xE8, 0xCB, 0x69, 0xED, 0x79, 0x42, 0x2D, 0x5E, 0x5D, 0x57, 0xD8, 0xB2, 0xA0, 0x42, 0xF0, 0x9A,
 0x94, 0x5E, 0x7D, 0x40, 0xFF, 0x62, 0x14, 0x84, 0x46, 0xBE, 0xDD, 0x62, 0x9A, 0x26, 0xDF, 0x91,
 0x61, 0x55, 0x75, 0xE9, 0x85, 0x61, 0x34, 0x99, 0xEE, 0xCB, 0x58, 0x63, 0xB3, 0x55, 0x8A, 0xE6,
 0x16, 0xD6, 0x80, 0x7A, 0x82, 0x16, 0x46, 0x41, 0x45, 0x0D, 0xDB, 0x33, 0x21, 0x33, 0xAD, 0x9B,
 0xD9, 0x48, 0x99, 0x4A, 0x07, 0x81, 0x75, 0x36, 0x56, 0xC6, 0xCE, 0x6C, 0x5E, 0x17, 0x6C, 0x83,
 0x31, 0x9F, 0x04, 0x33, 0x1A, 0x75, 0xAC, 0x98, 0x9A, 0xA5, 0xD2, 0xF2, 0xB4, 0x2C, 0xE0, 0x53,
 0x71, 0x6A, 0xC5, 0x42, 0x5A, 0x28, 0x7D, 0x93, 0xAA, 0x5E, 0xE4, 0x2C, 0x90, 0xD4, 0x13, 0x8F,
 0x9C, 0x0F, 0xD7, 0x22, 0x68, 0x79, 0x5A, 0x3C, 0x2B, 0x5A, 0xC3, 0xA2, 0x16, 0x8C, 0xE0, 0x80,
 0x6F, 0x55, 0x99, 0x8A, 0x1C, 0x2C, 0x51, 0xC0, 0xE4, 0x60, 0xF9, 0x1B, 0x5A, 0x23, 0x8B, 0xEF,
 0xBC, 0xCA, 0xAE, 0x85, 0xF0, 0x5D, 0x91, 0x6A, 0xCC, 0xEC, 0x2B, 0xDF, 0xCB, 0x15, 0x37, 0x3B,
 0x26, 0x42, 0x88, 0x45, 0xEB, 0x81, 0x55, 0xF8, 0x09, 0xE4, 0x41, 0xD0, 0x7C, 0xA4, 0xA7, 0x80,
 0x84, 0x4E, 0xE2, 0x6F, 0xD5, 0xAD, 0x1C, 0x65, 0x55, 0xED, 0xEA, 0xA1, 0x89, 0x30, 0x5A, 0xC2,
 0xEE, 0xD5, 0xDE, 0x01, 0x3B, 0xF0, 0x70, 0xA1, 0xB7, 0xB1, 0x0B, 0x1F, 0xE0, 0xA2, 0x1E, 0x7C,
 0x96, 0xCB, 0x19, 0x65, 0x23, 0xDE, 0x47, 0xF7, 0x93, 0xD8, 0xF0, 0xDB, 0x97, 0x1B, 0x92, 0xE9,
 0xAE, 0xF8, 0x42, 0x02, 0x2F, 0x74, 0x05, 0x45, 0x87, 0xFB, 0x84, 0x7A, 0x65, 0xCE, 0xA1, 0xF6,
 0x61, 0x17, 0x04, 0x93, 0xAF, 0x21, 0x53, 0x61, 0xAC, 0xDC, 0x02, 0x60, 0xB0, 0x05, 0xAB, 0xF9,
 0xE5, 0xAB, 0xF1, 0x78, 0xE6, 0x26, 0xF6, 0xD8, 0x4C, 0xF7, 0xE0, 0xF0, 0x9F, 0x0D, 0x96, 0x07,
 0xCB, 0xBC, 0x79, 0x62, 0x34, 0x73, 0x6D, 0xB8, 0x44, 0x2F, 0x68, 0xF3, 0x16, 0x1A, 0xAF, 0xE3,
 0x85, 0x26, 0xBC, 0xFF, 0x99, 0x6F, 0x9B, 0x17, 0xA2, 0x06, 0xFE, 0x22, 0x72, 0xE0, 0x0F, 0x17,
 0x1A, 0x5D, 0xDF, 0x5D, 0xE4, 0x66, 0x11, 0x75, 0xB1, 0x25, 0x0C, 0x17, 0xDA, 0xC2, 0xF1, 0x62,
 0xDB, 0x98, 0xCE, 0xB5, 0x36, 0x65, 0xCB, 0xE9, 0xD1, 0xAA, 0x72, 0x3B, 0xDD, 0xD4, 0xD5, 0xF6,
 0x74, 0x5E, 0xA5, 0xB9, 0x25, 0xD1, 0xFF, 0x43, 0xA7, 0xA1, 0x3F, 0x5A, 0x94, 0x77, 0xB8, 0xD8,
 0x36, 0x72, 0x87, 0x3F, 0x3D, 0x73, 0x7E, 0x34, 0x91, 0xEE, 0xBD, 0xEA, 0x21, 0x48, 0x13, 0x80,
 0xDA, 0x63, 0xD0, 0x53, 0x50, 0xBA, 0xF1, 0x80, 0xAF, 0x67, 0x81, 0xC3, 0x76, 0xC3, 0x84, 0xBF,
 0x60, 0x1D, 0xFB, 0x8A, 0x26, 0x0A, 0xA8, 0xC2, 0x32, 0x86, 0xD8, 0x9B, 0xD3, 0x45, 0x0E, 0x55,
 0x71, 0x67, 0xA0, 0x8F, 0x95, 0x3F, 0xB3, 0x5E, 0xB1, 0x17, 0x5D, 0xB0, 0x1B, 0x9D, 0x0A, 0xF3,
 0x3B, 0x37, 0xA4, 0x17, 0xB6, 0x85, 0x7E, 0x64, 0xD6, 0xAB, 0x67, 0x9E, 0xD5, 0xC8, 0xFD, 0xC2,
 0x46, 0xBC, 0xA8, 0xFB, 0xD5, 0x96, 0x5F, 0x6A, 0x7C, 0x3F, 0xB8, 0xBD, 0xAD, 0x28, 0x15, 0x6D,
 0xAC, 0x1E, 0x1C, 0x9E, 0x1C, 0xF6, 0x0E, 0x8B, 0xB7, 0x56, 0xB9, 0x52, 0x14, 0x7A, 0x69, 0xD1,
 0x53, 0xA0, 0x84, 0x61, 0x6A, 0x4B, 0x73, 0xC2, 0xCF, 0xA9, 0x6F, 0x3F, 0x73, 0x98, 0x40, 0x96,
 0x64, 0x9D, 0xD7, 0xDD, 0xF3, 0x33, 0x3C, 0x4C, 0x86, 0xA4, 0x9B, 0xA1, 0x97, 0x39, 0x2C, 0xCB,
 0x8B, 0x15, 0x95, 0x51, 0xC8, 0xA8, 0x2E, 0x0D, 0x3C, 0xFE, 0xD5, 0x44, 0xF1, 0x95, 0xA5, 0x8E,
 0x26, 0x3F, 0x80, 0xBA, 0xAF, 0x14, 0x4D, 0x37, 0x15, 0xCA, 0x72, 0x8D, 0x4B, 0x97, 0x64, 0x77,
 0x35, 0x16, 0xB7, 0x03, 0xF9, 0x75, 0xFC, 0x74, 0x43, 0x10, 0x05, 0x5E, 0x61, 0x37, 0xF8, 0x21,
 0x4B, 0x8F, 0x29, 0x26, 0x23, 0x0C, 0x24, 0x8C, 0x61, 0x5D, 0xF2, 0x27, 0x00, 0xF1, 0x32, 0x0A,
 0x26, 0x2F, 0x85, 0x82, 0x8A, 0x4C, 0x06, 0xA9, 0xB0, 0xE3, 0x2E, 0xCF, 0x72, 0x7D, 0x23, 0xCD,
 0xB8, 0xDF, 0xB9, 0x3D, 0xFD, 0x77, 0xE4, 0xA7, 0x3C, 0x2F, 0x64, 0x00, 0xB3, 0xBF, 0xD9, 0xCD,
 0x81, 0xB2, 0x40, 0xFE, 0x30, 0x50, 0x9E, 0x68, 0x1E, 0x48, 0x16, 0xB3, 0xA1, 0x02, 0x65, 0x79,
 0x70, 0x09, 0x24, 0xA6, 0x43, 0x05, 0x78, 0x6D, 0xDD, 0x5A, 0xFC, 0xFA, 0xD8, 0x52, 0xC2, 0x1A,
 0xB4, 0xFD, 0x17, 0xA6, 0xAB, 0x65, 0xDC, 0x3E, 0x18, 0x10, 0x53, 0xDE, 0x03, 0x41, 0x0B, 0xF2,
 0x74, 0x5C, 0xD4, 0x58, 0x98, 0x32, 0x8B, 0x8B, 0x81, 0x82, 0x8C, 0x5E, 0x94, 0xFA, 0xB3, 0x09,
 0x9D, 0x48, 0x7E, 0xD5, 0x2E, 0x7E, 0x61, 0xD6, 0x41, 0x20, 0xE5, 0x2F, 0xA9, 0x4D, 0xF1, 0x13,
 0xCE, 0xFC, 0x1D, 0x3C, 0x71, 0xEE, 0x69, 0xD4, 0xD9, 0xE9, 0x58, 0x8D, 0x1F, 0x39, 0x64, 0xF0,
 0xF8, 0x98, 0x39, 0xBC, 0xAF, 0x6B, 0x1A, 0x3B, 0xCB, 0xBC, 0xA4, 0x54, 0xC0, 0x05, 0x73, 0xB5,
 0x45, 0x36, 0x44, 0x33, 0x3F, 0x47, 0x9E, 0x80, 0xBB, 0xE6, 0xB9, 0x48, 0xCB, 0xCE, 0x05, 0x2E,
 0xF4, 0x23, 0x68, 0x58, 0x1B, 0xC9, 0xE9, 0x33, 0xEC, 0x94, 0x79, 0xAE, 0xE2, 0x52, 0x16, 0x3A,
 0x75, 0x58, 0xC6, 0x26, 0xF3, 0x59, 0x16, 0x27, 0xF0, 0x5A, 0x8B, 0x4D, 0x6B, 0xF8, 0xA2, 0xF6,
 0xF4, 0x77, 0xF3, 0xC1, 0xEE, 0x27, 0x0F, 0x73, 0xBF, 0x2F, 0x6B, 0xDE, 0x17, 0x8D, 0xAE, 0x82,
 0x08, 0xA4, 0x11, 0x96, 0x4C, 0x54, 0x08, 0xFB, 0xA9, 0x63, 0x43, 0x84, 0x6D, 0x7B, 0xC1, 0xC0,
 0xFC, 0x88, 0x0D, 0x9F, 0x30, 0x44, 0x23, 0xE1, 0x26, 0x17, 0xDE, 0x7D, 0xE9, 0x1B, 0xD9, 0xEE,
 0xC7, 0x8E, 0x11, 0x0B, 0x52, 0xC9, 0xC3, 0x85, 0x4B, 0xB2, 0xE7, 0x38, 0xDF, 0xB8, 0x46, 0xB7,
 0xFA, 0x1C, 0x44, 0x3F, 0xE3, 0x58, 0x95, 0x36, 0xC5, 0x9A, 0x36, 0xA6, 0xFC, 0x46, 0x83, 0x59,
 0x58, 0xE8, 0x64, 0xAE, 0x79, 0xE5, 0x31, 0x8C, 0xB4, 0x56, 0x11, 0x5D, 0x36, 0xAC, 0x0B, 0xA3,
 0x2E, 0xBB, 0x34, 0xAF, 0xD6, 0x98, 0x45, 0x92, 0x31, 0xC1, 0x61, 0x60, 0x21, 0xAD, 0x9D, 0x1A,
 0xAF, 0x4C, 0xB0, 0xF8, 0xD0, 0x24, 0x1C, 0x07, 0x53, 0x6C, 0xA1, 0x7C, 0x33, 0xEE, 0xCA, 0x1C,
 0x07, 0x53, 0x90, 0x88, 0xF8, 0x25, 0xC9, 0x21, 0x38, 0x7B, 0x17, 0x70, 0x18, 0x77, 0x38, 0x93,
 0x53, 0xA8, 0xCA, 0x4C, 0x03, 0x9C, 0xA5, 0x3E, 0x81, 0x27, 0xE1, 0x7F, 0x8C, 0x54, 0x3A, 0xDB,
 0x1E, 0x7A, 0x37, 0x07, 0x62, 0x8E, 0x0E, 0x50, 0xEC, 0x53, 0x07, 0xFB, 0x07, 0x13, 0x7B, 0x97,
 0xED, 0xCF, 0xF1, 0x3B, 0x4B, 0xC7, 0xFC, 0x6A, 0xF3, 0x9D, 0x06, 0x94, 0x1F, 0xBC, 0x1F, 0xD3,
 0x6E, 0x30, 0x4C, 0x7A, 0xD6, 0x20, 0x36, 0xD5, 0x52, 0x7B, 0x09, 0x2C, 0x00, 0x75, 0x61, 0x91,
 0x69, 0x6E, 0xE6, 0x98, 0x3B, 0x72, 0x47, 0x63, 0x0F, 0xB7, 0x91, 0xF8, 0x25, 0xDE, 0x13, 0x08,
 0x2D, 0x0B, 0xB4, 0x00, 0xAC, 0x0B, 0xAB, 0xFC, 0x8B, 0xC8, 0xF5, 0x93, 0x53, 0x76, 0x0E, 0x65,
 0xB2, 0xDA, 0x5E, 0x87, 0xB1, 0x83, 0xC9, 0xC4, 0xF2, 0x1D, 0xA6, 0x82, 0x0E, 0x7F, 0x36, 0xA5,
 0x7A, 0xD0, 0x55, 0x9A, 0x64, 0x3D, 0xB6, 0xA0, 0xB2, 0xE5, 0x5D, 0xEB, 0x15, 0xD1, 0x35, 0x80,
 0xC0, 0xFB, 0x86, 0xDE, 0x35, 0xC9, 0xD7, 0x19, 0x7E, 0x85, 0x6B, 0xBD, 0x93, 0x44, 0x5E, 0xB5,
 0xBB, 0x5E, 0xC1, 0xAF, 0x32, 0xD9, 0xF8, 0xCE, 0xE1, 0xA1, 0xE9, 0x5E, 0xA2, 0x60, 0xF9, 0xA0,
 0x5D, 0xB4, 0x12, 0x47, 0x9B, 0x5A, 0x31, 0x9D, 0x09, 0x0F, 0x15, 0x4D, 0x20, 0xDC, 0xEC, 0x4A,
 0x65, 0xC3, 0x10, 0xA1, 0x42, 0xA5, 0x91, 0x8A, 0x32, 0x24, 0xCB, 0x39, 0xF7, 0xF1, 0xAB, 0x7B,
 0x6C, 0x82, 0x68, 0x11, 0xDF, 0x39, 0x49, 0x88, 0xCF, 0xC1, 0x83, 0x26, 0xF9, 0x61, 0x71, 0x92,
 0x1F, 0xBE, 0x63, 0x92, 0x45, 0x6A, 0x86, 0x97, 0x3E, 0x0C, 0x7F, 0x6A, 0xF9, 0xB0, 0xB2, 0x8C,
 0xA0, 0x01, 0x99, 0xD1, 0x54, 0xF5, 0x37, 0x4F, 0x35, 0xA2, 0x0F, 0x9C, 0x6A, 0x17, 0xEF, 0x99,
 0x15, 0x4D, 0x58, 0x76, 0xFC, 0xCD, 0xD3, 0x46, 0xC6, 0xBE, 0x77, 0xDA, 0x32, 0xB2, 0xA8, 0xCC,
 0x9D, 0xDD, 0xB3, 0xD3, 0x57, 0xAB, 0xB9, 0x12, 0x58, 0xD4, 0x10, 0xD9, 0x73, 0xF9, 0x87, 0xD4,
 0x06, 0x0F, 0xC8, 0xDD, 0x3F, 0x17, 0x82, 0x0A, 0x66, 0x75, 0xAF, 0xAD, 0x15, 0x38, 0xBD, 0xCC,
 0x45, 0xF8, 0xC0, 0x6F, 0x07, 0xCE, 0xDD, 0x09, 0x1E, 0x8F, 0xA9, 0xCB, 0x02, 0xF0, 0x8B, 0xD7,
 0x00, 0xBF, 0x32, 0x54, 0x7E, 0x55, 0x2E, 0x62, 0x17, 0x03, 0x41, 0xC3, 0x4E, 0x30, 0x03, 0x09,
 0xF1, 0xDB, 0x9D, 0xB5, 0x31, 0xAC, 0xEE, 0x41, 0xF6, 0xC0, 0xAE, 0x4D, 0xCD, 0xFA, 0xC7, 0x17,
 0x8F, 0x3F, 0x95, 0xA1, 0xEC, 0xDF, 0x87, 0x8F, 0xD2, 0x3E, 0x3C, 0x3C, 0xFE, 0xF4, 0x5B, 0xA9,
 0x3E, 0x72, 0x2B, 0xDA, 0x1D, 0xC9, 0xCA, 0x0D, 0xBD, 0xAB, 0xF0, 0x0B, 0x39, 0x10, 0xA6, 0x71,
 0x20, 0x76, 0x71, 0x17, 0x68, 0xB3, 0xC6, 0x5D, 0xA1, 0x9B, 0x4C, 0x61, 0x92, 0x59, 0xCF, 0xC8,
 0x3C, 0x56, 0x61, 0xC8, 0x35, 0xEE, 0xF0, 0xEC, 0x91, 0x2F, 0x6D, 0xD8, 0x63, 0x1A, 0x6C, 0xE5,
 0xE5, 0x06, 0x45, 0x86, 0xDD, 0x92, 0x30, 0xB0, 0xC9, 0x50, 0x97, 0x24, 0x10, 0xB0, 0xE0, 0x4A,
 0xA3, 0x21, 0xBF, 0x6C, 0x65, 0xE4, 0x6E, 0x35, 0x82, 0x00, 0x77, 0xF1, 0x9B, 0x20, 0xE2, 0x1B,
 0x20, 0xE2, 0xAB, 0x20, 0xFC, 0x16, 0x00, 0xCA, 0x3F, 0x6E, 0xD6, 0xEB, 0xB6, 0xE3, 0x5F, 0xC7,
 0x90, 0xDE, 0x82, 0xA9, 0x33, 0xF4, 0x60, 0x69, 0x87, 0xEE, 0x55, 0xC7, 0x9B, 0xC3, 0x75, 0xCF,
 0x1D, 0xC4, 0x75, 0x54, 0xDE, 0x46, 0x6D, 0xA3, 0xF6, 0x0C, 0x9F, 0x6A, 0xB0, 0x3A, 0xD0, 0xBF,
 0x28, 0xAD, 0xAD, 0x0F, 0x88, 0x3D, 0xC6, 0x15, 0x69, 0xB2, 0x6F, 0x4C, 0x93, 0x61, 0xF5, 0xA9,
 0xF1, 0x5C, 0x1B, 0xB6, 0x2E, 0xBE, 0x82, 0x8D, 0xFB, 0xF7, 0xA0, 0x47, 0x7E, 0x41, 0x42, 0xD7,
 0xE7, 0xAE, 0xF1, 0x1C, 0x66, 0xB6, 0xE7, 0xB8, 0xB7, 0xC4, 0x85, 0x2E, 0x31, 0x19, 0xC2, 0x4E,
 0x7E, 0xD4, 0x2B, 0x50, 0x04, 0x80, 0x0C, 0xA0, 0x9A, 0x77, 0x41, 0x1F, 0x93, 0x5C, 0x41, 0xBB,
 0x50, 0x4B, 0x41, 0x8F, 0x2C, 0x52, 0xE4, 0xC5, 0x87, 0xCC, 0x77, 0x76, 0x74, 0x04, 0x97, 0xDD,
 0xFD, 0x40, 0x9C, 0xEC, 0x6D, 0x10, 0x81, 0xB8, 0x9E, 0x41, 0x5C, 0x07, 0x44, 0x8E, 0x80, 0x92,
 0x40, 0x11, 0x30, 0x89, 0xB0, 0x2F, 0xAB, 0xFF, 0x07, 0x86, 0xAC, 0x05, 0x5C, 0xBD, 0x3E, 0x00,
 0x00
};

// WEB HANDLER IMPLEMENTATION

SPIFFSEditor::SPIFFSEditor(const String& username, const String& password)
:_username(username)
,_password(password)
,_authenticated(false)
,_startTime(0)
{}

bool SPIFFSEditor::canHandle(AsyncWebServerRequest *request){
  if(request->url().equalsIgnoreCase("/edit")){
    if(request->method() == HTTP_GET){
      if(request->hasParam("list"))
        return true;
      if(request->hasParam("edit")){
        request->_tempFile = SPIFFS.open(request->arg("edit"), "r");
        if(!request->_tempFile)
          return false;
      }
      if(request->hasParam("download")){
        request->_tempFile = SPIFFS.open(request->arg("download"), "r");
        if(!request->_tempFile)
          return false;
      }
      return true;
    }
    else if(request->method() == HTTP_POST)
      return true;
    else if(request->method() == HTTP_DELETE)
      return true;
    else if(request->method() == HTTP_PUT)
      return true;

  }
  return false;
}

void SPIFFSEditor::handleRequest(AsyncWebServerRequest *request){
  if(_username.length() && _password.length() && !request->authenticate(_username.c_str(), _password.c_str()))
    return request->requestAuthentication();

  if(request->method() == HTTP_GET){
    if(request->hasParam("list")){
      String path = request->getParam("list")->value();
      Dir dir = SPIFFS.openDir(path);
      path = String();
      String output = "[";
      while(dir.next()){
        fs::File entry = dir.openFile("r");
        if (output != "[") output += ',';
        bool isDir = false;
        output += "{\"type\":\"";
        output += (isDir)?"dir":"file";
        output += "\",\"name\":\"";
        output += String(entry.name()).substring(1);
        output += "\",\"size\":";
        output += String(entry.size());
        output += "}";
        entry.close();
      }
      output += "]";
      request->send(200, "text/json", output);
      output = String();
    }
    else if(request->hasParam("edit") || request->hasParam("download")){
      request->send(request->_tempFile, request->_tempFile.name(), String(), request->hasParam("download"));
    }
    else {
      AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", edit_htm_gz, edit_htm_gz_len);
      response->addHeader("Content-Encoding", "gzip");
      request->send(response);
    }
  } else if(request->method() == HTTP_DELETE){
    if(request->hasParam("path", true)){
      SPIFFS.remove(request->getParam("path", true)->value());
      request->send(200, "", "DELETE: "+request->getParam("path", true)->value());
    } else
      request->send(404);
  } else if(request->method() == HTTP_POST){
    if(request->hasParam("data", true, true) && SPIFFS.exists(request->getParam("data", true, true)->value()))
      request->send(200, "", "UPLOADED: "+request->getParam("data", true, true)->value());
    else
      request->send(500);
  } else if(request->method() == HTTP_PUT){
    if(request->hasParam("path", true)){
      String filename = request->getParam("path", true)->value();
      if(SPIFFS.exists(filename)){
        request->send(200);
      } else {
        fs::File f = SPIFFS.open(filename, "w");
        if(f){
          f.write((uint8_t)0x00);
          f.close();
          request->send(200, "", "CREATE: "+filename);
        } else {
          request->send(500);
        }
      }
    } else
      request->send(400);
  }
}

void SPIFFSEditor::handleUpload(AsyncWebServerRequest *request, const String& filename, size_t index, uint8_t *data, size_t len, bool final){
  if(!index){
    if(!_username.length() || request->authenticate(_username.c_str(),_password.c_str())){
      _authenticated = true;
      request->_tempFile = SPIFFS.open(filename, "w");
      _startTime = millis();
    }
  }
  if(_authenticated && request->_tempFile){
    if(len){
      request->_tempFile.write(data,len);
    }
    if(final){
      request->_tempFile.close();
    }
  }
}
